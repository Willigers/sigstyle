source('J:/Mijn documenten/R/R-3.5.3/library/sigstyle/R/colorramp_sig.R')
devtools::check()
install.packages(devtools)
install.packages("devtools")
install_github('Willigers/sigstyle')
library(devtools)
install_github('Willigers/sigstyle')
library(sigstyle)
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle/R")
document()
library(devtools)
library(roxygen2)
document()
document()
document()
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library")
install("sigstyle")
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle")
library(devtools)
library(roxygen2)
document()
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library")
install("sigstyle")
colors_sig("blue")
library(sigstyle)
colors_sig("blue")
palette_sig("main")
library(devtools)
library(roxygen2)
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle")
document()
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library")
install("sigstyle")
palette_sig("main")
colors_sig("blue")
palette_sig("main")
pal_sig
palette_sig()
library(sigstyle)
palette_sig()
palette_sig("main")
palette_sig <- function(palette = "all", n = 0) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# Define palettes from Significance style colors
pal_sig <- list(
'all'         = colors_sig("light blue", "blue", "yellow", "orange", "red", "green",
"light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter",
"light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'main'        = colors_sig("light blue", "blue", "yellow", "orange", "red", "green"),
'lighter'     = colors_sig("light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter"),
'darker'      = colors_sig("light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'basic'       = colors_sig("light blue", "blue"),
'posneg'      = colors_sig("green", "red"),
'posnegneut'  = colors_sig("green", "red", "light blue"),
'postoneg'    = colors_sig("green", "white", "light blue"),
'mintoplus'   = colors_sig("blue", "white", "red"),
'blues'       = colors_sig("white", "light blue - lighter", "blue"),
'lightblues'  = colors_sig("white", "light blue"),
'highlight'   = colors_sig("light blue", "red"),
'intense'     = colors_sig("yellow", "orange", "red"),
)
pal <- pal_sig[[palette]]
if(n>0 & n<length(pal)) {
pal <- pal[1:n]
}
return (pal)
}
colorramp_sig <- function(palette = "all", reverse = FALSE, n = 0, ...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
pal <- palette_sig(palette, n)
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
scale_color_sig <- function(palette = "all", discrete = TRUE, reverse = FALSE, n = 0, ...) {
pal <- colorramp_sig(palette = palette, reverse = reverse, n = n, space = "Lab")
if (discrete) {
ggplot2::discrete_scale("color", paste0(palette, "_sig"), palette = pal, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
scale_color_sig(n=2)
colors_sig <- function(...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
cols_sig <- c(
'light blue'           = "#009ee0", #  0-158-224
'blue'                 = "#00567c", #  0- 86-124
'yellow'               = "#e5c019", #229-192- 25
'orange'               = "#ca7d16", #202-125- 22
'red'                  = "#a81d39", #168- 29- 57
'green'                = "#0c6846", # 12-107- 70
'light blue - darker'  = "#005f86", #  0- 95-134
'blue - darker'        = "#00344a", #  0- 52- 74
'yellow - darker'      = "#89730f", #137-115- 15
'orange - darker'      = "#794b0d", #121- 75- 13
'red - darker'         = "#651122", #101- 17- 34
'green - darker'       = "#07402a", #  7- 64- 42
'light blue - lighter' = "#1abcff", # 26-188-255
'blue - lighter'       = "#008cc9", #  0-140-201
'yellow - lighter'     = "#ebcd46", #235-205- 70
'orange - lighter'     = "#e99a31", #233-154- 49
'red - lighter'        = "#da294d", #218- 41- 77
'green - lighter'      = "#14b174", # 20-177-116
'white'                = "#ffffff"  #255-255-255
)
cols <- c(...)
if (is.null(cols))
return (cols_sig)
cols_sig[cols]
}
palette_sig <- function(palette = "all", n = 0) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# Define palettes from Significance style colors
pal_sig <- list(
'all'         = colors_sig("light blue", "blue", "yellow", "orange", "red", "green",
"light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter",
"light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'main'        = colors_sig("light blue", "blue", "yellow", "orange", "red", "green"),
'lighter'     = colors_sig("light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter"),
'darker'      = colors_sig("light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'basic'       = colors_sig("light blue", "blue"),
'posneg'      = colors_sig("green", "red"),
'posnegneut'  = colors_sig("green", "red", "light blue"),
'postoneg'    = colors_sig("green", "white", "light blue"),
'mintoplus'   = colors_sig("blue", "white", "red"),
'blues'       = colors_sig("white", "light blue - lighter", "blue"),
'lightblues'  = colors_sig("white", "light blue"),
'highlight'   = colors_sig("light blue", "red"),
'intense'     = colors_sig("yellow", "orange", "red"),
)
pal <- pal_sig[[palette]]
if(n>0 & n<length(pal)) {
pal <- pal[1:n]
}
return (pal)
}
colorramp_sig <- function(palette = "all", reverse = FALSE, n = 0, ...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
pal <- palette_sig(palette, n)
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
scale_color_sig <- function(palette = "all", discrete = TRUE, reverse = FALSE, n = 0, ...) {
pal <- colorramp_sig(palette = palette, reverse = reverse, n = n, space = "Lab")
if (discrete) {
ggplot2::discrete_scale("color", paste0(palette, "_sig"), palette = pal, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
scale_color_sig(n=2)
colors_sig <- function(...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
cols_sig <- c(
'light blue'           = "#009ee0", #  0-158-224
'blue'                 = "#00567c", #  0- 86-124
'yellow'               = "#e5c019", #229-192- 25
'orange'               = "#ca7d16", #202-125- 22
'red'                  = "#a81d39", #168- 29- 57
'green'                = "#0c6846", # 12-107- 70
'light blue - darker'  = "#005f86", #  0- 95-134
'blue - darker'        = "#00344a", #  0- 52- 74
'yellow - darker'      = "#89730f", #137-115- 15
'orange - darker'      = "#794b0d", #121- 75- 13
'red - darker'         = "#651122", #101- 17- 34
'green - darker'       = "#07402a", #  7- 64- 42
'light blue - lighter' = "#1abcff", # 26-188-255
'blue - lighter'       = "#008cc9", #  0-140-201
'yellow - lighter'     = "#ebcd46", #235-205- 70
'orange - lighter'     = "#e99a31", #233-154- 49
'red - lighter'        = "#da294d", #218- 41- 77
'green - lighter'      = "#14b174", # 20-177-116
'white'                = "#ffffff"  #255-255-255
)
cols <- c(...)
if (is.null(cols))
return (cols_sig)
cols_sig[cols]
}
palette_sig <- function(palette = "all", n = 0) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# Define palettes from Significance style colors
pal_sig <- list(
'all'         = colors_sig("light blue", "blue", "yellow", "orange", "red", "green",
"light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter",
"light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'main'        = colors_sig("light blue", "blue", "yellow", "orange", "red", "green"),
'lighter'     = colors_sig("light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter"),
'darker'      = colors_sig("light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'basic'       = colors_sig("light blue", "blue"),
'posneg'      = colors_sig("green", "red"),
'posnegneut'  = colors_sig("green", "red", "light blue"),
'postoneg'    = colors_sig("green", "white", "light blue"),
'mintoplus'   = colors_sig("blue", "white", "red"),
'blues'       = colors_sig("white", "light blue - lighter", "blue"),
'lightblues'  = colors_sig("white", "light blue"),
'highlight'   = colors_sig("light blue", "red"),
'intense'     = colors_sig("yellow", "orange", "red")
)
pal <- pal_sig[[palette]]
if(n>0 & n<length(pal)) {
pal <- pal[1:n]
}
return (pal)
}
colorramp_sig <- function(palette = "all", reverse = FALSE, n = 0, ...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
pal <- palette_sig(palette, n)
if (reverse) pal <- rev(pal)
colorRampPalette(pal, ...)
}
scale_color_sig <- function(palette = "all", discrete = TRUE, reverse = FALSE, n = 0, ...) {
pal <- colorramp_sig(palette = palette, reverse = reverse, n = n, space = "Lab")
if (discrete) {
ggplot2::discrete_scale("color", paste0(palette, "_sig"), palette = pal, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
scale_color_sig(n=2)
colorramp_sig(palette = "all", reverse = FALSE, n = , space = "Lab")
list(1:10)
sample(list(1:10))
sample(unlist(1:10))
colors_sig <- function(...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
cols_sig <- c(
'light blue'           = "#009ee0", #  0-158-224
'blue'                 = "#00567c", #  0- 86-124
'yellow'               = "#e5c019", #229-192- 25
'orange'               = "#ca7d16", #202-125- 22
'red'                  = "#a81d39", #168- 29- 57
'green'                = "#0c6846", # 12-107- 70
'light blue - darker'  = "#005f86", #  0- 95-134
'blue - darker'        = "#00344a", #  0- 52- 74
'yellow - darker'      = "#89730f", #137-115- 15
'orange - darker'      = "#794b0d", #121- 75- 13
'red - darker'         = "#651122", #101- 17- 34
'green - darker'       = "#07402a", #  7- 64- 42
'light blue - lighter' = "#1abcff", # 26-188-255
'blue - lighter'       = "#008cc9", #  0-140-201
'yellow - lighter'     = "#ebcd46", #235-205- 70
'orange - lighter'     = "#e99a31", #233-154- 49
'red - lighter'        = "#da294d", #218- 41- 77
'green - lighter'      = "#14b174", # 20-177-116
'white'                = "#ffffff"  #255-255-255
)
cols <- c(...)
if (is.null(cols))
return (cols_sig)
cols_sig[cols]
}
palette_sig <- function(palette = "all", n = 0) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# Define palettes from Significance style colors
pal_sig <- list(
'all'         = colors_sig("light blue", "blue", "yellow", "orange", "red", "green",
"light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter",
"light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'main'        = colors_sig("light blue", "blue", "yellow", "orange", "red", "green"),
'lighter'     = colors_sig("light blue - lighter", "blue - lighter", "yellow - lighter", "orange - lighter", "red - lighter", "green - lighter"),
'darker'      = colors_sig("light blue - darker", "blue - darker", "yellow - darker", "orange - darker", "red - darker", "green - darker"),
'basic'       = colors_sig("light blue", "blue"),
'posneg'      = colors_sig("green", "red"),
'posnegneut'  = colors_sig("green", "red", "light blue"),
'postoneg'    = colors_sig("green", "white", "light blue"),
'mintoplus'   = colors_sig("blue", "white", "red"),
'blues'       = colors_sig("white", "light blue - lighter", "blue"),
'lightblues'  = colors_sig("white", "light blue"),
'highlight'   = colors_sig("light blue", "red"),
'intense'     = colors_sig("yellow", "orange", "red")
)
pal <- pal_sig[[palette]]
if(palette %in% c("all", "main", "lighter", "darker") & n>length(pal)) {
pal <- rep(pal, ceiling(n/length(pal)))
}
if(n>0 & n<length(pal)) {
pal <- pal[1:n]
}
return (pal)
}
colorramp_sig <- function(palette = "all", reverse = FALSE, n = 0, ...) {
#Structure of functions adapted from: https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
pal <- palette_sig(palette, n)
if (reverse) pal <- rev(pal)
if (random) pal <- sample(pal)
colorRampPalette(pal, ...)
}
scale_color_sig <- function(palette = "all", discrete = TRUE, reverse = FALSE, random = FALSE, n = 0, ...) {
pal <- colorramp_sig(palette = palette, reverse = reverse, n = n, space = "Lab")
if (discrete) {
ggplot2::discrete_scale("color", paste0(palette, "_sig"), palette = pal, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
scale_color_sig(n=2)
library(devtools)
library(roxygen2)
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle")
document()
document()
setwd("..")
install("sigstyle")
rm(list=ls())
install("sigstyle")
#' Significance ggplot2 theme
#'
#' Defines the theme for ggplot2 plots. This includes fonts, grid lines, axis ticks, margins, etc.
#'
#' @keywords theme
#'
#' @return Theme to be used for ggplot2 plots
#'
#' @examples
#' mtcars %>%
#'   ggplot(aes(gear)) +
#'     geom_bar() +
#'     labs(x="Number of gears",
#'          y="Count",
#'          title="Car types"
#'     ) +
#'     theme_sig() +
#'     scale_y_continuous(expand = c(0, 0))
#'
#' @export
theme_sig <- function(){
#Structure adapted from: https://rpubs.com/mclaire19/ggplot2-custom-themes
#Make sure R can find the Georgia font on Windows
windowsFonts(Georgia=windowsFont("Georgia"))
font <- "Georgia"
theme_light() %+replace%    #replace elements we want to change
ggplot2::theme(
#grid elements: only horizontal grid lines remain
panel.grid.major.x = element_blank(),  #strip vertical gridlines
panel.grid.major.y = element_line(size = 0.1, colour = "grey75"),  #format horizontal gridlines
panel.grid.minor = element_blank(),    #strip minor gridlines
panel.border = element_blank(),        #strip border around plot
panel.spacing = unit(0.75, "cm"),      #spacing between facets
axis.line = element_blank(),           #strip axis lines
axis.ticks = element_blank(),          #strip axis ticks
plot.margin = unit(c(10,10,10,10), "pt") ,
#text elements
plot.title = element_text(             #title
family = font,            #set font family
size = 14,                #set font size
hjust = 0.5,              #center align
vjust = 1,
margin = margin(t = 0, b = 10, unit = "pt"),               #raise slightly
color = "black"),         #title is black
plot.subtitle = element_text(          #subtitle
family = font,            #font family
size = 13,                #font size
hjust = 0.5,              #center align
vjust = 1,
margin = margin(t = 0, b = 5, unit = "pt"),               #raise slightly
color = "#2c2c2c"),       #subtitle is dark gray
plot.caption = element_text(           #caption
family = font,            #font family
size = 9,                 #font size
margin = margin(t = 5, b = 0, unit = "pt"),
hjust = 1),               #right align
axis.title = element_text(             #axis titles
family = font,            #font family
vjust = 0,                #center align
size = 10,                #font size
margin=margin(t = 5, b = 20, unit = "pt")),
axis.text = element_text(              #axis text
family = font,            #axis family
vjust = 0.25,             #center align
size = 9),                #font size
axis.text.x = element_text(            #margin for axis text
margin=margin(t = 3, b = 5, unit = "pt")),
axis.text.y = element_text(            #margin for axis text
margin=margin(l = 3, r = 5, unit = "pt")),
# Strip labels for graphs with facets
strip.text = element_text(
family= font,
size = 10,
color = colors_sig("blue"),
margin = margin(t = 5, r = 5, b = 5, l = 5, unit = "pt")),  #margin to avoid overlap with plot
strip.background = element_blank(),
# Legend
legend.title = element_text(
family= font,
size = 10,
color = "#2c2c2c"),
legend.text = element_text(
family= font,
size = 9,
color = "#2c2c2c")
)
}
theme_sig_pivot <- function(){
theme_light() %+replace%    #replace elements we want to change
ggplot2::theme(
panel.grid.major.y = element_blank(),                                     # strip horizontal gridlines
panel.grid.major.x = element_line(size = 0.1, colour = "grey75"),         # format vertical gridlines
)
}
library(roxygen2)
library(devtools)
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle/R")
document()
document()
setwd("//s02-sig.significance.local/Users/jwi/Mijn documenten/R/R-3.5.3/library/sigstyle")
document()
setwd(..)
setwd("..")
install("sigstyle")
library(sigstyle)
